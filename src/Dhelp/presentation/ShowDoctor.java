/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Dhelp.presentation;
import  Dhelp.DAO.AfficherDoctor;
import Dhelp.entities.Admin;
import Dhelp.entities.Personnes;
import java.awt.*;
import java.sql.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author user
 */
public class ShowDoctor extends javax.swing.JFrame {

   Admin admin = null;
    public ShowDoctor() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        bu_AfficherAllDoctorsActionPerformed(null);
        Boolean Auth = false;
        jp_info.setVisible(false);
    }
     public ShowDoctor(Admin a) {
        initComponents();
        admin = a;
        lb_login.setText(a.getLogin_admin());
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        bu_AfficherAllDoctorsActionPerformed(null);
        Boolean Auth = false;
        jp_info.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Table_m = new javax.swing.JTable();
        bu_load = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bu_ok = new javax.swing.JButton();
        bu_update = new javax.swing.JButton();
        bu_open = new javax.swing.JButton();
        bu_off = new javax.swing.JButton();
        tb_backPage = new javax.swing.JButton();
        tb_delete_doctor = new javax.swing.JButton();
        tb_searchBox = new javax.swing.JButton();
        tb_search = new javax.swing.JTextField();
        rb_nom = new javax.swing.JRadioButton();
        rb_spec = new javax.swing.JRadioButton();
        bu_AfficherAllDoctors = new javax.swing.JButton();
        jp_info = new javax.swing.JPanel();
        tb_specialite = new javax.swing.JComboBox();
        tb_login = new javax.swing.JTextField();
        tb_nom = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tb_date = new javax.swing.JTextField();
        tb_pays = new javax.swing.JTextField();
        tb_prenom = new javax.swing.JTextField();
        tb_email = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lb_login = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        Table_m.setBackground(new java.awt.Color(240, 240, 240));
        Table_m.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Table_m.setGridColor(new java.awt.Color(255, 0, 102));
        Table_m.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table_mMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table_m);

        bu_load.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/Blue Download Folder.png"))); // NOI18N
        bu_load.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bu_loadActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/medecinajoutMiniIcon.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tunga", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 102));
        jLabel2.setText("Mèdecin Box");

        bu_ok.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/Thumb-up.png"))); // NOI18N
        bu_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bu_okActionPerformed(evt);
            }
        });

        bu_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/Save-01.png"))); // NOI18N
        bu_update.setToolTipText("");
        bu_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bu_updateActionPerformed(evt);
            }
        });

        bu_open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/add.png"))); // NOI18N
        bu_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bu_openActionPerformed(evt);
            }
        });

        bu_off.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/Power-02.png"))); // NOI18N
        bu_off.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bu_offActionPerformed(evt);
            }
        });

        tb_backPage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/Back.png"))); // NOI18N
        tb_backPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_backPageActionPerformed(evt);
            }
        });

        tb_delete_doctor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/trash.png"))); // NOI18N
        tb_delete_doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_delete_doctorActionPerformed(evt);
            }
        });

        tb_searchBox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/search.png"))); // NOI18N
        tb_searchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb_searchBoxActionPerformed(evt);
            }
        });

        rb_nom.setText("par nom");

        rb_spec.setText("par spécialité");

        bu_AfficherAllDoctors.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Dhelp/image/List.png"))); // NOI18N
        bu_AfficherAllDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bu_AfficherAllDoctorsActionPerformed(evt);
            }
        });

        jp_info.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "information de médecin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tunga", 0, 18), new java.awt.Color(255, 0, 153))); // NOI18N

        tb_specialite.setBackground(new java.awt.Color(240, 240, 240));
        tb_specialite.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tb_specialite.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Anatomie pathologique ", "Anesthésie-réanimation ", "Biologie clinique ", "Cardiologie ", "Chirurgie ", "Chirurgie plastique", "Chirurgie reconstructrice ", "Chirurgie esthétique ", "Dermatologie-Vénérologie ", "Gastroentérologie", "Gériatrie ", "Gynécologie-obstétrique", "Médecine légale ", "Gestion des données de santé ", "Médecine d'expertise ", "Médecine du travail ", "Médecine générale ", "Médecine aiguë ", "Médecine d’urgence", "Médecine interne", "Médecine nucléaire", "Médecine physique ", "Neurochirurgie", "Neurologie ", "Ophtalmologie ", "Chirurgie orthopédique", "Oncologie médicale", "Oto-rhino-laryngologie", "Pédiatrie ", "Psychiatrie infanto-juvénile ", "Psychiatrie Adulte", "Radiothérapie-oncologie", "Radiodiagnostic ", "Rhumatologie ", "Stomatologie ", "Urologie " }));

        tb_login.setBackground(new java.awt.Color(240, 240, 240));
        tb_login.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        tb_login.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tb_login.setMaximumSize(new java.awt.Dimension(50, 50));
        tb_login.setMinimumSize(new java.awt.Dimension(6, 25));

        tb_nom.setBackground(new java.awt.Color(240, 240, 240));
        tb_nom.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        tb_nom.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tb_nom.setMaximumSize(new java.awt.Dimension(50, 50));
        tb_nom.setMinimumSize(new java.awt.Dimension(6, 25));

        jLabel9.setText("date ");

        jLabel8.setText("spécialité");

        jLabel7.setText("Pays");

        jLabel6.setText("email");

        jLabel5.setText("Prenom");

        jLabel4.setText("Nom");

        jLabel3.setText("Login");

        tb_date.setBackground(new java.awt.Color(240, 240, 240));
        tb_date.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        tb_date.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tb_date.setMaximumSize(new java.awt.Dimension(50, 50));
        tb_date.setMinimumSize(new java.awt.Dimension(6, 25));

        tb_pays.setBackground(new java.awt.Color(240, 240, 240));
        tb_pays.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        tb_pays.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tb_pays.setMaximumSize(new java.awt.Dimension(50, 50));
        tb_pays.setMinimumSize(new java.awt.Dimension(6, 25));

        tb_prenom.setBackground(new java.awt.Color(240, 240, 240));
        tb_prenom.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        tb_prenom.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tb_prenom.setMaximumSize(new java.awt.Dimension(50, 50));
        tb_prenom.setMinimumSize(new java.awt.Dimension(6, 25));

        tb_email.setBackground(new java.awt.Color(240, 240, 240));
        tb_email.setFont(new java.awt.Font("Tw Cen MT", 0, 12)); // NOI18N
        tb_email.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tb_email.setMaximumSize(new java.awt.Dimension(50, 50));
        tb_email.setMinimumSize(new java.awt.Dimension(6, 25));

        javax.swing.GroupLayout jp_infoLayout = new javax.swing.GroupLayout(jp_info);
        jp_info.setLayout(jp_infoLayout);
        jp_infoLayout.setHorizontalGroup(
            jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_infoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jp_infoLayout.createSequentialGroup()
                        .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(21, 21, 21)
                        .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tb_nom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tb_login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jp_infoLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tb_prenom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jp_infoLayout.createSequentialGroup()
                        .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tb_specialite, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tb_date, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(tb_email, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tb_pays, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jp_infoLayout.setVerticalGroup(
            jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jp_infoLayout.createSequentialGroup()
                .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(tb_login, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tb_nom, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tb_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tb_email, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tb_pays, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tb_specialite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jp_infoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tb_date, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Tunga", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 153, 153));
        jLabel10.setText("Cliquer sur un champ dans la liste pour modifer le contenu");

        lb_login.setForeground(new java.awt.Color(0, 204, 255));
        lb_login.setText("jLabel11");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jp_info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb_login)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tb_backPage, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bu_off, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(tb_search, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rb_nom)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(rb_spec))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(bu_AfficherAllDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_delete_doctor, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bu_open, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bu_update, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bu_ok, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bu_load)))
                        .addComponent(jLabel10)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bu_off, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tb_backPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(34, 34, 34))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lb_login)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(tb_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rb_nom)
                                    .addComponent(rb_spec))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(jLabel10))
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bu_ok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bu_update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bu_open, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bu_load, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tb_delete_doctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tb_searchBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bu_AfficherAllDoctors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jp_info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bu_loadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bu_loadActionPerformed
       AfficherDoctor ad = new AfficherDoctor();
       ArrayList<Personnes> lp = new ArrayList<>();
       try{
       for(Object em:(ArrayList)ad.AfficherDoc())
           lp.add((Personnes)em);
       }catch(SQLException ex){}
       
    DefaultTableModel amod = new DefaultTableModel();
    Object[] tableColumnNames = new Object[8];
    tableColumnNames[0]="login ";
    tableColumnNames[1]="Nom "; 
    tableColumnNames[2]="Prenom";
    tableColumnNames[3]="date naissance";
    tableColumnNames[4]="pays";
    tableColumnNames[5]="code";
    tableColumnNames[6]="Pays";
    tableColumnNames[7]="specialite";
       
    amod.setColumnIdentifiers(tableColumnNames);
    Object[] objects = new Object[8];
    if(lp.size()>0)
    {
        for(int i=0;i<lp.size();i++)
        {
            Personnes hashmap = lp.get(i);
            objects[0]=hashmap.getLogin_personnes().toString();
            objects[1]=hashmap.getNom().toString();
            objects[2]=hashmap.getPrenom().toString();
            objects[3]=hashmap.getDate_naissance().toString();
            objects[4]=hashmap.getPays().toString();
            objects[5]=hashmap.getCode_medecin();
            objects[6]=hashmap.getEmail().toString();
            objects[7]=hashmap.getSpecialite().toString();
            amod.addRow(objects);
        }
        this.Table_m.setModel(amod);
        
        
    }
       
       
    }//GEN-LAST:event_bu_loadActionPerformed

    private void Table_mMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table_mMouseClicked
        jp_info.setVisible(true);
        try{
            int row = Table_m.getSelectedRow();
            String tc_login=(Table_m.getModel().getValueAt(row, 0).toString());
            String tc_nom=(Table_m.getModel().getValueAt(row, 1).toString());
            String tc_prenom=(Table_m.getModel().getValueAt(row, 2).toString());
            String tc_date=(Table_m.getModel().getValueAt(row, 3).toString());
            String tc_pays=(Table_m.getModel().getValueAt(row, 4).toString());
            int tc_code=Integer.parseInt((Table_m.getModel().getValueAt(row, 5).toString()));
            String tc_email=(Table_m.getModel().getValueAt(row, 6).toString());
            String tc_spec=(Table_m.getModel().getValueAt(row, 7).toString());
            
            tb_login.setText(tc_login);
            tb_nom.setText(tc_nom);
            tb_prenom.setText(tc_prenom);
            tb_specialite.addItem(tc_spec);
            tb_date.setText(tc_date);
            tb_pays.setText(tc_pays);
            tb_email.setText(tc_email);
            
        
        
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_Table_mMouseClicked

    private void bu_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bu_okActionPerformed
        AfficherDoctor ad = new AfficherDoctor();
        
        try{
                int row = Table_m.getSelectedRow();
                String Table_click=(Table_m.getModel().getValueAt(row, 0).toString());
                String Table_click_nom = (Table_m.getModel().getValueAt(row, 1).toString());
                ad.AccepterDoctor(Table_click);
                JOptionPane.showMessageDialog(null, "le medecin "+Table_click_nom+"a ete accepté");
                
        
        
        }
        
        catch(Exception e){JOptionPane.showMessageDialog(null, e);}
    }//GEN-LAST:event_bu_okActionPerformed

    private void bu_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bu_updateActionPerformed
        Personnes p = new Personnes();
        AfficherDoctor ad = new AfficherDoctor();
        p.setLogin_personnes(tb_login.getText());
        p.setNom(tb_nom.getText());
        p.setPrenom(tb_prenom.getText());
        p.setDate_naissance(tb_date.getText());
        p.setPays(tb_pays.getText());
        p.setEmail(tb_email.getText());
        p.setSpecialite(tb_specialite.getSelectedItem().toString());
        
        try{
            int row = Table_m.getSelectedRow();
        String Table_click=(Table_m.getModel().getValueAt(row, 0).toString());
        ad.UpdateDoctor(p,Table_click);
        JOptionPane.showMessageDialog(rootPane, "modification faite avec succes");
        bu_loadActionPerformed(evt);
        
        
        }
        catch(Exception e){JOptionPane.showMessageDialog(null, e);}
    }//GEN-LAST:event_bu_updateActionPerformed

    private void bu_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bu_openActionPerformed
        Ajouter_Medecin am = new Ajouter_Medecin();
        am.setVisible(true);
    }//GEN-LAST:event_bu_openActionPerformed

    private void bu_offActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bu_offActionPerformed
        this.setVisible(false);
        LoginAdmin lg = new LoginAdmin();
        lg.setVisible(true);
                
    }//GEN-LAST:event_bu_offActionPerformed

    private void tb_backPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_backPageActionPerformed
        DrhelpMenu dm = null;
        try {
            dm = new DrhelpMenu(admin);
        } catch (SQLException ex) {
            Logger.getLogger(ShowDoctor.class.getName()).log(Level.SEVERE, null, ex);
        }
      
       
        this.setVisible(false);
        dm.setVisible(true);
    }//GEN-LAST:event_tb_backPageActionPerformed

    private void tb_delete_doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_delete_doctorActionPerformed

        AfficherDoctor ad = new AfficherDoctor();
        try{
                int row = Table_m.getSelectedRow();
                String Table_click=(Table_m.getModel().getValueAt(row, 0).toString());
                String Table_click_nom = (Table_m.getModel().getValueAt(row, 1).toString());
                ad.DeleteDoctor(Table_click);
                JOptionPane.showMessageDialog(null, "le medecin"+Table_click_nom+" a ete supprimé");
                
        
        
        }
        
        catch(Exception e){JOptionPane.showMessageDialog(null, e);}
        
    }//GEN-LAST:event_tb_delete_doctorActionPerformed

    private void tb_searchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb_searchBoxActionPerformed
        AfficherDoctor ad = new AfficherDoctor();
        ArrayList<Personnes> lp = new ArrayList<>();
        String s= tb_search.getText();
        if(rb_nom.isSelected())
        {
       try{
       for(Object em:(ArrayList)ad.SearchDoctorByName(s))
           lp.add((Personnes)em);
       }catch(SQLException ex){}
       DefaultTableModel amod = new DefaultTableModel();
    Object[] tableColumnNames = new Object[8];
    tableColumnNames[0]="login ";
    tableColumnNames[1]="Nom "; 
    tableColumnNames[2]="Prenom";
    tableColumnNames[3]="date naissance";
    tableColumnNames[4]="pays";
    tableColumnNames[5]="code";
    tableColumnNames[6]="Pays";
    tableColumnNames[7]="specialite";
       
    amod.setColumnIdentifiers(tableColumnNames);
    Object[] objects = new Object[8];
    if(lp.size()>0)
    {
        for(int i=0;i<lp.size();i++)
        {
            Personnes hashmap = lp.get(i);
            objects[0]=hashmap.getLogin_personnes().toString();
            objects[1]=hashmap.getNom().toString();
            objects[2]=hashmap.getPrenom().toString();
            objects[3]=hashmap.getDate_naissance().toString();
            objects[4]=hashmap.getPays().toString();
            objects[5]=hashmap.getCode_medecin();
            objects[6]=hashmap.getEmail().toString();
            objects[7]=hashmap.getSpecialite().toString();
            amod.addRow(objects);
        }
        this.Table_m.setModel(amod);
       
        }
        }
        else if(rb_spec.isSelected())
        {
       try{
       for(Object em:(ArrayList)ad.SearchDoctorBySpec(s))
           lp.add((Personnes)em);
       }catch(SQLException ex){}
       DefaultTableModel amod = new DefaultTableModel();
    Object[] tableColumnNames = new Object[8];
    tableColumnNames[0]="login ";
    tableColumnNames[1]="Nom "; 
    tableColumnNames[2]="Prenom";
    tableColumnNames[3]="date naissance";
    tableColumnNames[4]="pays";
    tableColumnNames[5]="code";
    tableColumnNames[6]="Pays";
    tableColumnNames[7]="specialite";
       
    amod.setColumnIdentifiers(tableColumnNames);
    Object[] objects = new Object[8];
    if(lp.size()>0)
    {
        for(int i=0;i<lp.size();i++)
        {
            Personnes hashmap = lp.get(i);
            objects[0]=hashmap.getLogin_personnes().toString();
            objects[1]=hashmap.getNom().toString();
            objects[2]=hashmap.getPrenom().toString();
            objects[3]=hashmap.getDate_naissance().toString();
            objects[4]=hashmap.getPays().toString();
            objects[5]=hashmap.getCode_medecin();
            objects[6]=hashmap.getEmail().toString();
            objects[7]=hashmap.getSpecialite().toString();
            amod.addRow(objects);
        }
        this.Table_m.setModel(amod);
       
        }
        }
    }//GEN-LAST:event_tb_searchBoxActionPerformed

    private void bu_AfficherAllDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bu_AfficherAllDoctorsActionPerformed
        boolean accepte = false;
        AfficherDoctor ad = new AfficherDoctor();
       ArrayList<Personnes> lp = new ArrayList<Personnes>();
       try{
       for(Object em:(ArrayList)ad.AfficherAllDoc())
           lp.add((Personnes)em);
       }catch(SQLException ex){}
       
    DefaultTableModel amod = new DefaultTableModel();
    Object[] tableColumnNames = new Object[9];
    tableColumnNames[0]="login ";
    tableColumnNames[1]="Nom "; 
    tableColumnNames[2]="Prenom";
    tableColumnNames[3]="date naissance";
    tableColumnNames[4]="pays";
    tableColumnNames[5]="code";
    tableColumnNames[6]="Pays";
    tableColumnNames[7]="specialite";
    tableColumnNames[8]="Accepté";
       
    amod.setColumnIdentifiers(tableColumnNames);
    Object[] objects = new Object[9];
    if(lp.size()>0)
    {
        for(int i=0;i<lp.size();i++)
        {
            Personnes hashmap = lp.get(i);
            objects[0]=hashmap.getLogin_personnes().toString();
            objects[1]=hashmap.getNom().toString();
            objects[2]=hashmap.getPrenom().toString();
            objects[3]=hashmap.getDate_naissance().toString();
            objects[4]=hashmap.getPays().toString();
            objects[5]=hashmap.getCode_medecin();
            objects[6]=hashmap.getEmail().toString();
            objects[7]=hashmap.getSpecialite().toString();
            objects[8]=hashmap.isAccepte_p();
            amod.addRow(objects);
           
        }
        this.Table_m.setModel(amod);
        
        
        
        
    }
       
       
    }//GEN-LAST:event_bu_AfficherAllDoctorsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowDoctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ShowDoctor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_m;
    private javax.swing.JButton bu_AfficherAllDoctors;
    private javax.swing.JButton bu_load;
    private javax.swing.JButton bu_off;
    private javax.swing.JButton bu_ok;
    private javax.swing.JButton bu_open;
    private javax.swing.JButton bu_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jp_info;
    private javax.swing.JLabel lb_login;
    private javax.swing.JRadioButton rb_nom;
    private javax.swing.JRadioButton rb_spec;
    private javax.swing.JButton tb_backPage;
    private javax.swing.JTextField tb_date;
    private javax.swing.JButton tb_delete_doctor;
    private javax.swing.JTextField tb_email;
    private javax.swing.JTextField tb_login;
    private javax.swing.JTextField tb_nom;
    private javax.swing.JTextField tb_pays;
    private javax.swing.JTextField tb_prenom;
    private javax.swing.JTextField tb_search;
    private javax.swing.JButton tb_searchBox;
    private javax.swing.JComboBox tb_specialite;
    // End of variables declaration//GEN-END:variables
}
